<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <name>x_123849_angular_a.ng_chat_controller</name>
        <script><![CDATA[var mod = angular.module('angularapp', []);
var messages = {
	startChatting: 'Connect',
	stopChatting: 'Disconnect',
	greet: 'Greetings',
	welcome: 'Welcome to chat!'
};
var connectionOptions =  {
	"force new connection" : true,
	"reconnectionAttempts": "Infinity", 
	//avoid having user reconnect manually in order to prevent dead clients after a server restart
	"timeout" : 10000, //before connect_error and connect_timeout are emitted.
	"transports" : ["websocket"]
};
var host = "https://localhost:3000";

mod.controller('ChatController', ['$scope', '$http', function($scope, $http) {
	$scope.myVar = '';
	$scope.i = 0;
	$scope.status = 'stopped';
	$scope.username = g_user.fullName;
	$scope.chatButtonMessage1 = messages.startChatting;
	$scope.chatButtonMessage2 = messages.stopChatting;
	$scope.salutation = [messages.greet, $scope.username + ',', messages.welcome].join(' ');
	
	var chatFormElement = document.getElementById('sn-chat-form');
    var chatMessagesElement = document.getElementById('sn-chat-messages');
	var chatInputElement = document.getElementById('sn-chat-input');	

	var socket = '';
	
	function appendMessage(msg, type) {
		var elm = document.createElement('li');
		var msgEl = document.createElement('span');
		msgEl.textContent = msg.msg;
		msgEl.className = "message-content";
		if (type === 'status') {
			elm.className = "status";
			elm.appendChild(msgEl);
		} else {
			var userEl = document.createElement('span');
			userEl.className = "message-user";
			userEl.textContent = (msg.user === $scope.username) ? 'me' : msg.user;
			elm.appendChild(userEl);						
			elm.appendChild(msgEl);
		}
		chatMessagesElement.appendChild(elm);
	}
	
	function initiateChatConnection() {
		chatFormElement.addEventListener('submit', function(evt) {
			var msg = {msg: chatInputElement.value, user: $scope.username};
			socket.emit('chat message', msg);
			console.log(msg);
			chatInputElement.value = '';
			evt.preventDefault();
			evt.stopPropagation();
		});
		
		socket.on('status', function(msg) {
			appendMessage(msg, 'status');
		});
		
		socket.on('chat message', function(msg) {
			appendMessage(msg);
		});
		
	}

	$scope.stopChat = function() {
		if (socket) {
			socket.disconnect();
			appendMessage({msg: 'You have logged out.'}, 'status');
			socket = null;
			$scope.status = 'stopped';
		}
		
	};
	
	$scope.startChat = function() {
		socket = io(host, connectionOptions);
		if (socket) {
			$scope.status = 'started';
			console.log(socket);
			initiateChatConnection();
		} else {
			alert('Chat Connection Error!');
		}
	};
	

}]);]]></script>
        <script_name>ng_chat_controller</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-05-12 08:22:23</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>a8e7f8b3db2a72003d18d190cf9619ad</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>x_123849_angular_a.ng_chat_controller</sys_name>
        <sys_package display_value="Angular App" source="x_123849_angular_a">37f9bf1bdbee32003d18d190cf9619be</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Angular App">37f9bf1bdbee32003d18d190cf9619be</sys_scope>
        <sys_update_name>sys_ui_script_a8e7f8b3db2a72003d18d190cf9619ad</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-05-12 16:28:14</sys_updated_on>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
